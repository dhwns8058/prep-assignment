1. 게임 시작 버튼 만들기 
<button id="start">게임시작</button>

------------------------------------------------------

2. 게임 시작 버튼을 클릭 했을때, 랜덤한 세 자리 숫자 만들기 (사용자에게 보여주진 않습니다.)
for (var i = 0; i < 3; i++) - 반복해서 3자리 만들기

- splice 메소드 사용(순서 상관하지 않아야 하기 때문에..) pop,shift는 뽑는 순서가 정해져있다. 
- splice(위치, 개수) -> 위치로부터 개수만큼 배열에서 뽑는다.
  const randomNum = allNum.splice(Math.floor(Math.random() * (9 - i)), 1)[0];

* (Math.floor(Math.random() * (9 - i)),1) - 랜덤한 자리수에서 숫자 하나씩 뽑기 위해. 1~9
* 배열의 자리수로 인해 (0~8) ceil이 아닌 floor 사용 
---- ceil을 사용하면 (1~9) 배열 자리 검사하기 때문에 첫째 자리 0은 포함되지 않는다. 
* 9 - i - undefined 뽑는 에러 해결

* [0]을 적지 않았을 때 각 숫자가 각 배열에 있는 현상 발견. [0]뒤에 붙여주니 숫자만 ?? 

------------------------------------------------------

3. 숫자 입력칸 만들기 <form><input type="text"></form>

------------------------------------------------------

4. 사용자가 엔터키를 클릭 했을때, 입력값이 세자리 숫자가 아닌 경우 경고창 띄워주기
if (input.value.length !== 3) {
        alert("세자리 숫자를 입력하시오.")
    }
    ~ maxLength?? / 숫자가 아닌 문자 세자리가 입력되어도 실행이 가능한 오류가 존재한다. 

- isNaN으로 해결!!

------------------------------------------------------

5. 사용자가 엔터키를 클릭 했을때, 2단계에서 생성한 숫자와 사용자의 입력값 비교하기

* gameStart 함수 안에 있던 배열 변수 (allNum, gameNum) 밖으로 빼기 (const)

answer(input.value) === gameNum 비교하기! typeof를 통해 gameNum을 string으로 변화해야할 필요성 인지!
join 메소드 사용!
비교해서 같으면 "아웃" 결과 표기!

------------------------------------------------------

6. 각 자리 별로 비교하고, 같은 자리에 같은 숫자가 몇개 있는지 판별합니다. (스트라이크 갯수)

for (var i = 0; i < 3; i++) {
            if (Number(answer_split[i]) === (gameNum[i])) {// stirke 
                strike += 1;
            }
        
반복문과 split[i]를 사용해 각 배열 자리 별로 비교. 같은 숫자가 있으면 strike = strike + 1

------------------------------------------------------

7. 각 자리 별로 비교하고, 다른 자리에 같은 숫자가 몇개 있는지 판별합니다. (볼 갯수)

gameNum.indexOf(Number(answer_split[i])) !== -1

이중for문 시도 실패..
2개의 배열의 자리를 한꺼번에 비교하는게 아니라 indexOf를 통해 한 자리 씩 비교하면 어떨까.

indexOf = -1의 의미는 배열 내에서 찾는 값이 없을 때 반환되는 값.
for반복문을 통해 input.value의 0-2번째 자리에 있는 값을 가져와 gameNum 배열 내의 값들과 비교해 판별. 

------------------------------------------------------

8. 화면에 스트라이크와 볼의 갯수를 표기합니다.

``(백틱 사용) 

------------------------------------------------------

9. 사용자가 10회까지 시도할 수 있도록 제한합니다.

let failNumber = 0;

function fail() {
    failNumber = failNumber + 1;
    if (failNumber > 10) {
        alert("10회 초과 실패! 답은" + gameNum + "입니다. \n재시작 버튼을 눌러 다시 게임을 시작하세요.")
    }
}

failNumber > 10 -> failNumber === 10으로 수정

fail함수 만들어 답이 틀렸을 때 failNumber 1씩 증가시켜 10회 초과시 경고창 등장.

------------------------------------------------------

10. 게임 재시작 버튼을 만들고, 재시작 할 수 있도록 합니다.

function restart() {
    output.innerHTML = "";
    gameStart();
}

* 게임시작, 재시작 버튼을 누를 때 마다 
[1] 난수에 undefined 생성되는 문제 발생 
[2] 3n배수 난수가 출력되는 문제 발생

[1] 해결 -> gameStart함수 안에 allNum, gameNum 변수 선언
splice때문에 변경되는 allNum 

그러나 gameNum is not defined 에러 발생

변수선언(let, const, var)의 문제일까?

변수선언의 문제X gameNum 전역객체 gameStart함수 밖에 위치!! 해결


[2]해결.
for반복문 통해 3배수 난수 출력. 
배열 초기화! 
    *******gameNum.length = 0; 추가.

function restart() {
    output.innerHTML = "";
    gameNum.length = 0;
    gameStart();
}

~~~~~~~~~~~~~~~~~~~~

틀린횟수 10번 초과 후 재시작 버튼을 눌러 다시 게임을 재개했지만, input.value 입력하자 마자 틀린횟수 초과 경고창 등장
failNumber초기화 필요성 인지.

function restart() {
    output.innerHTML = "";
    gameNum.length = 0;
    failNumber = 0;
    gameStart();
}

gameNum.length = 0; 가장 중요한 부분....
배열 초기화!!!!!!!!!

------------------------------------------------------

11.잔여횟수 만들기




